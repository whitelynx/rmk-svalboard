# Documentation: https://haobogu.github.io/rmk/keyboard_configuration.html
[keyboard]
name = "Svalboard lightly"
product_name = "lightly"
vendor_id = 0x303A
product_id = 0x4044
manufacturer = "Svalboard"
chip = "rp2040"

[matrix]
# Input and output pins are mandatory
input_pins = ["PIN_8", "PIN_7", "PIN_6", "PIN_5", "PIN_4"]
output_pins = ["PIN_14", "PIN_13", "PIN_12", "PIN_11", "PIN_10", "PIN_9"],

[layout]
rows = 10
cols = 6
layers = 16
keymap = [
    [
        ["LCtrl", "Tab", "LShift", "Enter", "MO(14)", "CapsLock"],
        ["V", "G", "F", "R", "WM(Quote, LShift)", "__"],
        ["C", "T", "D", "E", "Grave", "__"],
        ["X", "B", "S", "W", "Escape", "__"],
        ["Z", "LeftBracket", "A", "Q", "Delete", "__"],
        ["LAlt", "Backspace", "MO(4)", "Space", "MO(2)", "MO(5)"],
        ["M", "Quote", "J", "U", "H", "__"],
        ["Comma", "WM(Semicolon, LShift)", "K", "I", "Y", "__"],
        ["Dot", "LGui", "L", "O", "N", "__"],
        ["Slash", "Backslash", "Semicolon", "P", "RightBracket", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["LCtrl", "Tab", "LShift", "Enter", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "Escape", "__"],
        ["__", "__", "__", "__", "Delete", "__"],
        ["LAlt", "Backspace", "MO(4)", "Space", "__", "__"],
        ["Home", "End", "Left", "WM(Left, LCtrl)", "Home", "__"],
        ["PageDown", "__", "Down", "WM(Down, LCtrl)", "__", "__"],
        ["PageUp", "__", "UP", "WM(UP, LCtrl)", "Insert", "__"],
        ["End", "__", "Right", "WM(Right, LCtrl)", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["LCtrl", "Tab", "LShift", "Enter", "__", "__"],
        ["Minus", "Kc5", "Kc4", "WM(Kc4, LShift)", "Slash", "__"],
        ["WM(Kc5, LShift)", "WM(Dot, LShift)", "Kc3", "WM(Kc3, LShift)", "WM(Comma, LShift)", "__"],
        ["X", "__", "Kc2", "WM(Kc2, LShift)", "Escape", "__"],
        ["Equal", "WM(Grave, LShift)", "Kc1", "WM(Kc1, LShift)", "Delete", "__"],
        ["LAlt", "Backspace", "MO(4)", "Space", "__", "__"],
        ["KpPlus", "WM(Minus, LShift)", "Kc7", "WM(Kc7, LShift)", "Kc6", "__"],
        ["Comma", "WM(Semicolon, LShift)", "Kc8", "KpAsterisk", "WM(Kc6, LShift)", "__"],
        ["Dot", "LGui", "Kc9", "WM(Kc9, LShift)", "Semicolon", "__"],
        ["WM(Slash, LShift)", "__", "Kc0", "WM(Kc0, LShift)", "RightBracket", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["F14", "F5", "F4", "F24", "F15", "__"],
        ["F13", "__", "F3", "F23", "__", "__"],
        ["F12", "__", "F2", "F22", "__", "__"],
        ["F11", "__", "F1", "F21", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["F17", "F16", "F7", "__", "F6", "__"],
        ["F18", "__", "F8", "__", "__", "__"],
        ["F19", "__", "F9", "__", "__", "__"],
        ["F20", "__", "F10", "__", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["WM(Kc4, LCtrl)", "WM(Kc5, LAlt)", "WM(Kc4, LAlt)", "WM(Kc8, LCtrl)", "__", "__"],
        ["WM(Kc3, LCtrl)", "WM(Tab, LCtrl)", "WM(Kc3, LAlt)", "WM(Kc7, LCtrl)", "WM(Tab, LCtrl | LShift)", "__"],
        ["WM(Kc2, LCtrl)", "__", "WM(Kc2, LAlt)", "WM(Kc6, LCtrl)", "__", "__"],
        ["WM(Kc1, LCtrl)", "WM(Kc9, LCtrl)", "WM(Kc1, LAlt)", "WM(Kc5, LCtrl)", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "User17", "__", "__"],
        ["__", "__", "__", "MouseBtn1", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "MouseBtn4", "__", "__"]
    ],
    [
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "MouseBtn2", "__", "MouseBtn1", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["MouseBtn3", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"],
        ["__", "__", "__", "__", "__", "__"]
    ]
]

[light]
# All light pins are high-active by default, uncomment if you want it to be low-active
# capslock.pin = "PB2"
# capslock.low_active = true
# scrolllock.pin = "PA3"
# scrolllock.low_active = true
# Just ignore if no light pin is used for it
# numslock.pin = "PA5"
# numslock.low_active = true
# WS2812 -> PIN_19


[storage]
# Storage feature is enabled by default
# enabled = false


[split]
connection = "serial"

[split.central]
rows = 7
cols = 6
rows = 5
cols = 6
row_offset = 0
col_offset = 0
serial = [
    { instance = "UART0", tx_pin = "PIN_0", rx_pin = "PIN_1" },
]

[split.central.matrix]
input_pins = ["PIN_8", "PIN_7", "PIN_6", "PIN_5", "PIN_4"]
output_pins = ["PIN_14", "PIN_13", "PIN_12", "PIN_11", "PIN_10", "PIN_9"],

[[split.peripheral]]
rows = 5
cols = 6
row_offset = 5
col_offset = 0
serial = [
    { instance = "UART0", tx_pin = "PIN_0", rx_pin = "PIN_1" },
]

[split.peripheral.matrix]
input_pins = ["PIN_8", "PIN_7", "PIN_6", "PIN_5", "PIN_4"]
output_pins = ["PIN_14", "PIN_13", "PIN_12", "PIN_11", "PIN_10", "PIN_9"],
